import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:fluttert_test_code/HivePracTiseAll/NoteApp/note_app_model.dart';
import 'package:fluttert_test_code/HivePracTiseAll/NoteApp/note_ui.dart';
import 'package:fluttert_test_code/StateManageMentExtra/Provider_with_api_projects.dart';
import 'package:hive/hive.dart';
import 'package:hive_flutter/adapters.dart';
import 'package:provider/provider.dart';
import 'firebase_options.dart';
import 'Custom Widgte/CotactListFnDumpOstad.dart';
import 'FirebaseFireStore/TestFirestore/contact_store.dart';
import 'firebase All/FireBaseGpt/login_contact_page.dart';
import 'firebase All/FireBaseGpt/mainAp_screen.dart';
import 'firebase All/Firebase Google Auth/login_contact_pageG.dart';
import 'firebase All/Firebase Google Auth/mainAp_screenG.dart';
import 'firebase All/TestfB/HomeScreen.dart';
import 'firebase All/TestfB/widgets/auth_wrapper.dart';
import 'ostad_flutter_Assignment/contact_list_app.dart';

/////test FireBase
import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/foundation.dart';
import 'package:firebase_messaging/firebase_messaging.dart';

//////////////////////////////////D:\CodesApplication\Flutter\fluttert_test_code\lib\firebase All\FullCurdAiReGen///
import 'firebase_options.dart'; // flutterfire configure ‡¶¶‡¶ø‡ßü‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶ì‡ßü‡¶æ ‡¶´‡¶æ‡¶á‡¶≤

//new Function For FCM
// **** ‡¶®‡¶§‡ßÅ‡¶® ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®: FCM ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶è‡¶¨‡¶Ç ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ****
///FCM Token ‡¶É dz0yalMbRG6gLTP7k2M3jL:APA91bFO4_-FacEIs1evG1kRthe1VOU5X1-5czVKdXg7V1y0R_srE2g-7dMJSn20JM0sD0Y8RW5YBXy9blEElPXFP93FmZwUfPVFB1V0kkQvtdP88KG_Dew
Future<void> _initializeFCM() async {
  FirebaseMessaging messaging = FirebaseMessaging.instance;

  // ‡ßß. ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶ï‡¶æ‡¶õ ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶§‡¶ø ‡¶ö‡¶æ‡¶ì‡ßü‡¶æ
  NotificationSettings settings = await messaging.requestPermission(
    alert: true,
    badge: true,
    sound: true,
  );

  if (settings.authorizationStatus == AuthorizationStatus.authorized) {
    print('‚úÖ User granted permission for notifications');
  } else {
    print('‚ùóÔ∏è User declined or has not accepted permission');
  }

  // ‡ß®. ‡¶°‡¶ø‡¶≠‡¶æ‡¶á‡¶∏‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶á‡¶â‡¶®‡¶ø‡¶ï FCM ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡¶æ
  final String? fcmToken = await messaging.getToken();
  print('üì± FCM Token: $fcmToken');
  // TODO: ‡¶è‡¶á ‡¶ü‡ßã‡¶ï‡ßá‡¶®‡¶ü‡¶ø Firestore-‡¶è ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶°‡¶ï‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá
  // ‡¶Ø‡¶æ‡¶§‡ßá ‡¶Ü‡¶™‡¶®‡¶ø ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶ï‡ßá ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§

  // ‡ß©. ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶Ø‡¶ñ‡¶® ‡¶ñ‡ßã‡¶≤‡¶æ (Foreground) ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡ßü ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶ñ‡¶® ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶æ
  FirebaseMessaging.onMessage.listen((RemoteMessage message) {
    print('üîî Got a message whilst in the foreground!');
    if (message.notification != null) {
      print('Message also contained a notification: ${message.notification!.title}');
      // ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶°‡¶æ‡ßü‡¶æ‡¶≤‡¶ó ‡¶¨‡¶æ ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®
    }
  });
}
/*
void main() async {
  // Flutter ‡¶¨‡¶æ‡¶á‡¶®‡ßç‡¶°‡¶ø‡¶Ç ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶§‡¶æ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡¶æ
  WidgetsFlutterBinding.ensureInitialized();

  // Firebase ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  runApp(const MyAppReFbCurd());
}

class MyAppReFbCurd extends StatelessWidget {
  const MyAppReFbCurd({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Firebase Demo',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.indigo,
        brightness: Brightness.dark, // ‡¶°‡¶æ‡¶∞‡ßç‡¶ï ‡¶•‡¶ø‡¶Æ
        inputDecorationTheme: const InputDecorationTheme(
          border: OutlineInputBorder(),
        ),
      ),
      // ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßá‡¶∞ ‡¶π‡ßã‡¶Æ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá AuthGate ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
      home: const AuthGate(),
    );
  }
}

class AuthGate extends StatelessWidget {
  const AuthGate({super.key});

  @override
  Widget build(BuildContext context) {
    return StreamBuilder<User?>(
      stream: FirebaseAuth.instance.authStateChanges(),
      builder: (context, snapshot) {
        // ‡¶Ø‡¶¶‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ ‡¶•‡ßá‡¶ï‡ßá ‡¶è‡¶ñ‡¶®‡ßã ‡¶ï‡ßã‡¶®‡ßã ‡¶°‡ßá‡¶ü‡¶æ ‡¶®‡¶æ ‡¶Ü‡¶∏‡ßá
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Scaffold(
            body: Center(child: CircularProgressIndicator()),
          );
        }

        // ‡¶Ø‡¶¶‡¶ø snapshot-‡¶è ‡¶°‡ßá‡¶ü‡¶æ ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶®‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶Ü‡¶õ‡ßá
        if (snapshot.hasData) {
          return const HomeScreen(); // ‡¶π‡ßã‡¶Æ ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶®‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶≤‡ßã
        }

        // ‡¶Ø‡¶¶‡¶ø snapshot-‡¶è ‡¶°‡ßá‡¶ü‡¶æ ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶®‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶®‡ßá‡¶á
        return const LoginScreen(); // ‡¶≤‡¶ó‡¶á‡¶® ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶®‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶≤‡ßã
      },
    );
  }
}

 */
//.................................................
//////////////////////////////D:\CodesApplication\Flutter\fluttert_test_code\lib\FirebaseFireStore\TestFirestore///
//FirebaseFirestore.instance.useFirestoreEmulator('localhost', 8080);

void main() async{
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  await _initializeFCM();
  if(kDebugMode){
    try{
      FirebaseFirestore.instance.useFirestoreEmulator('localhost', 8080);

      // Storage Emulator connect
      await FirebaseStorage.instance.useStorageEmulator('localhost', 9199);
      print("‚úÖ Firebase Storage Emulator successfully connected!");
    }catch (e){
      print("‚ùóÔ∏è Error connecting to Firebase Storage Emulator: $e");
    }
  }


  runApp(const MaterialApp(
    debugShowCheckedModeBanner: false,
    home: contactListWitheFbFirestore(),
  ));
}




/*
void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  await _initializeFCM();

  runApp(const MyAppFireBaseApiAiTest());
}

class MyAppFireBaseApiAiTest extends StatelessWidget {
  const MyAppFireBaseApiAiTest({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Firebase Auth Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        useMaterial3: true,
      ),
      home: const AuthWrapper(),
      debugShowCheckedModeBanner: false,
    );
  }
}

 */



////D:\CodesApplication\Flutter\fluttert_test_code\lib\StateManageMentExtra\Provider_with_api_projects.dart/////////////////////
/*
void main() {
  runApp(
      ChangeNotifierProvider(
        create: (_)=>ProductProvider(),
        child: MaterialApp(
          debugShowCheckedModeBanner: false,
          home: ProviderProjApiIn(),
        ),
      )
  );
}

 */



//......................D:\CodesApplication\Flutter\fluttert_test_code\lib\firebase All\Firebase Google Auth............................................
//Firebase Emolator  firebase emulators:start --only storage
/*

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
  options: DefaultFirebaseOptions.currentPlatform,
  );
  if (kDebugMode) {
    try{
      await FirebaseStorage.instance.useStorageEmulator('localhost', 9199);
      print("‚úÖ Firebase Storage Emulator successfully connected!");
    }catch(e){
      print("‚ùóÔ∏è Error connecting to Firebase Storage Emulator: $e");
    }

  }
  runApp(const contactFirebaseauth());
}

class contactFirebaseauth extends StatelessWidget {
  const contactFirebaseauth({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: const AuthGate(),
    );
  }
}

class AuthGate extends StatelessWidget {
  const AuthGate({super.key});

  @override
  Widget build(BuildContext context) {
    return StreamBuilder<User?>(
      stream: FirebaseAuth.instance.authStateChanges(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Center(child: CircularProgressIndicator());
        }
        if (snapshot.hasData) {
          return const homecontactG();
        }
        return const LoginScreenCpG();
      },
    );
  }
}

 */


/*
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
  options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(const contactFirebaseauth());
}

class contactFirebaseauth extends StatelessWidget {
  const contactFirebaseauth({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: const AuthGate(),
    );
  }
}

class AuthGate extends StatelessWidget {
  const AuthGate({super.key});

  @override
  Widget build(BuildContext context) {
    return StreamBuilder<User?>(
      stream: FirebaseAuth.instance.authStateChanges(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Center(child: CircularProgressIndicator());
        }
        if (snapshot.hasData) {
          return const homecontactG();
        }
        return const LoginScreenCpG();
      },
    );
  }
}



 */

//////////////////////////////
/*
void main() async{
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MaterialApp(
    debugShowCheckedModeBanner: false,
    home: contactFirebaseauth(),
  ));
}

class contactFirebaseauth extends StatelessWidget {
  const contactFirebaseauth({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: StreamBuilder<User?>(
          stream: FirebaseAuth.instance.authStateChanges(),
          builder: (_,snapshot){
            if(!snapshot.hasData){
              return const LoginScreenCp();
            }
            return homecontact();
          }
      ),
    );
  }
}

 */

////////////////////////////D:\CodesApplication\Flutter\fluttert_test_code\lib\firebase All\FireBaseGpt\login_contact_pageG.dart///
/*
void main() async{
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MaterialApp(
    debugShowCheckedModeBanner: false,
    home: contactFirebaseauth(),
  ));
}

class contactFirebaseauth extends StatelessWidget {
  const contactFirebaseauth({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: StreamBuilder<User?>(
          stream: FirebaseAuth.instance.authStateChanges(),
          builder: (_,snapshot){
            if(!snapshot.hasData){
              return const LoginScreenCp();
            }
            return homecontact();
          }
      ),
    );
  }
}

 */

///////////////////////D:\CodesApplication\Flutter\fluttert_test_code\lib\firebase All\FireBaseGpt
/*
import 'package:firebase_core/firebase_core.dart';
import '../../firebase_options.dart';

void main() async{
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(MaterialApp(debugShowCheckedModeBanner: false,home: AuthGate()));
}

//Auth Gate


class AuthGate extends StatelessWidget {
  const AuthGate({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: StreamBuilder<User?>(
        // authStateChanges() stream-‡¶ü‡¶ø Auth State ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡ßá
        stream: FirebaseAuth.instance.authStateChanges(),
        builder: (context, snapshot) {
          // ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡ßü ‡¶®‡ßá‡¶á
          if (!snapshot.hasData) {
            return LoginScreen(); // ‡¶≤‡¶ó‡¶á‡¶® ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì
          }
          // ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡ßü ‡¶Ü‡¶õ‡ßá‡¶®
          return HomeScreen(); // ‡¶π‡ßã‡¶Æ ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì
        },
      ),
    );
  }
}

 */

///////////////////////////D:\CodesApplication\Flutter\fluttert_test_code\lib\HivePracTiseAll\NoteApp
/*
void main() async {
  WidgetsFlutterBinding.ensureInitialized(); // ensure Start Flutter engine
  await Hive.initFlutter(); //
  Hive.registerAdapter(noteModleAdapter()); // Adapter Register
  await Hive.openBox<noteModle>("noteBox"); // Box Open
  runApp(MaterialApp(debugShowCheckedModeBanner: false, home: noteScreen()));
}
*/

//////////////////////

///D:\CodesApplication\Flutter\fluttert_test_code\lib\HivePracTiseAll\Contact Book Hive Practise gmn///////
/*
void main() async {
  WidgetsFlutterBinding.ensureInitialized(); // ensure Start Flutter engine
  await Hive.initFlutter(); //initial Hive
  Hive.registerAdapter(ContactModleAdapter()); // Adapter Register
  await Hive.openBox<ContactModle>("contactBox"); // Box Open
  runApp(MaterialApp(debugShowCheckedModeBanner: false, home: ContactScreen()));
}

 */
///////////////D:\CodesApplication\Flutter\fluttert_test_code\lib\Hive Ai Test\TransactionScreen.dart////////
/*
void main() async {
  // ‡¶´‡ßç‡¶≤‡¶æ‡¶ü‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá Hive ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡ßü‡¶æ‡¶≤‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡¶æ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá
  await Hive.initFlutter();

  // ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Adapter ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá
  Hive.registerAdapter(TransactionAdapter());

  // 'transactions' ‡¶®‡¶æ‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡¶ï‡ßç‡¶∏ ‡¶ñ‡ßÅ‡¶≤‡¶§‡ßá ‡¶π‡¶¨‡ßá
  await Hive.openBox<Transaction>('transactions');

  runApp(const HiveAiAdvtrans());
}

 */

//////////////////D:\CodesApplication\Flutter\fluttert_test_code\lib\HiveTask////////////////
/*
Future<void> main() async{
  WidgetsFlutterBinding.ensureInitialized(); // ensure Start Flutter engine
  Hive.initFlutter(); //
  Hive.registerAdapter(taskModelHAdapter()); // Adapter Register
  await Hive.openBox<taskModelH>("tasksBox");

  runApp(MaterialApp(
    debugShowCheckedModeBanner: false,
      home: taskPageUi()));
}

 */

////wishProduct
/*
Future<void> main() async{
  WidgetsFlutterBinding.ensureInitialized();  //// ensure Start Flutter engine
  await Hive.initFlutter();  //Start Hive
  Hive.registerAdapter(wishProductAdapter()); // wishProductAdapter Adapter Register from wishListProduct_model.dart
  await Hive.openBox<wishProduct>("wishListControlElement"); // wishListControlElement Box Open


  runApp(
    ChangeNotifierProvider(
      create: (context) => WishlistProvider(),
      child:  wishListUi(),
    ),
  );
}

 */

/////Hive Main
/*
void main() async { // 3. main() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ï‡ßá async ‡¶ï‡¶∞‡ßÅ‡¶®

  // 4. ‡¶´‡ßç‡¶≤‡¶æ‡¶ü‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶∏‡¶¨ ‡¶™‡ßç‡¶≤‡¶æ‡¶ó‡¶á‡¶® ‡¶Ø‡ßá‡¶® ‡¶†‡¶ø‡¶ï‡¶Æ‡¶§‡ßã ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡ßü ‡¶§‡¶æ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®
  WidgetsFlutterBinding.ensureInitialized();

  // 5. Hive ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®
  await Hive.initFlutter();

  // 6. ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü (Task) ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Adapter ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®
  Hive.registerAdapter(TaskAdapter());

  // 7. 'tasks' ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶¨‡¶ï‡ßç‡¶∏‡¶ü‡¶ø ‡¶ñ‡ßÅ‡¶≤‡ßÅ‡¶®‡•§ ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø Future, ‡¶§‡¶æ‡¶á await ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®
  await Hive.openBox<Task>('tasks');

  // 8. ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®
  runApp(MaterialApp(
    home: TaskScreen(),
  ));
}


 */
// ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶ï‡¶ø ‡¶ï‡ßã‡¶° (‡¶Ø‡ßá‡¶Æ‡¶® MyApp ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏) ‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§ ‡¶•‡¶æ‡¶ï‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá
//Temp
class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const Placeholder();
  }
}
